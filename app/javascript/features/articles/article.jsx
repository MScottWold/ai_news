import React, { useEffect, useState } from "react";
import { useSelector, useDispatch } from "react-redux";
import { useLocation } from "react-router-dom";
import { fetchArticle, toggleFavorite } from "./articles_slice";
import ArticlePhoto from "../photos/article_photo";
import { sectionNames } from "../../util/ui_util";
import Comments from "../comments/comments";
import LoadingSpinner from "../shared/loading_spinner";

const Article = () => {
  const [showComments, toggleShowComments] = useState(false);
  const articleId = useLocation().pathname.slice(10);
  const article = useSelector((state) => state.articles[articleId]);
  const loggedIn = !!useSelector((state) => state.session.currentUser);

  const dispatch = useDispatch();

  useEffect(() => {
    window.scrollTo(0, 0);
    toggleShowComments(false);
    if (!article || !article.body) {
      dispatch(fetchArticle(articleId))
        .then((receivedArticle) => document.title = receivedArticle.title);
    } else {
      document.title = article.title;
    }
  }, [articleId])

  if (!article || !article.body) {
    return (
      <article className="article">
        <LoadingSpinner />
      </article>
    );
  }

  const paragraphs = article.body
    .split("\r\n\r\n")
    .map((para, idx) => <p key={idx} >{para}</p>)
  const publishDate = new Date(article.createdAt).toUTCString();
  const favorited = article.favorited;

  const favoriteButton = loggedIn ? (
    <div id="favorite-container">
      <button
        className={`star${article.favorited ? "-favorite" : ""}`}
        tabIndex="0"
        onClick={() => dispatch(toggleFavorite({ articleId, favorite: !favorited }))}>
      </button>
      <div>{sectionNames[article.section]}</div>
    </div>
  ) : (
    <div>{sectionNames[article.section]}</div>
  );

  const commentsButton = showComments ? (
    <button className="button" onClick={() => toggleShowComments(false)}>
      Hide Comments
    </button>
  ) : (
      <button className="button" onClick={() => toggleShowComments(true)}>
      Show Comments
    </button>
  );

  return (
    <article className="article">
      {favoriteButton}
      <h1 className="main-article-headline">
        {article.title}
      </h1>
      <div className="byline">
        <div>By <a href={`#/authors/${article.authorId}`} className="author-name">{article.authorName}</a></div>
        <div>{publishDate}</div>
      </div>
      <ArticlePhoto photo={article.photo} />
      <div className="article-body">
        {paragraphs}
        <p className="disclaimer">Disclaimer: This article was generated by a text prediction algorithm, not a human author. Nothing in the article is intended as a statement of fact. For more information, visit the <a href="/about">about</a> page.</p>
      </div>
      {commentsButton}
      {showComments && <Comments articleId={article.id} loggedIn={loggedIn} />}
    </article>
  );
};

export default Article;
